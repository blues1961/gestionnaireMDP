services:
  mdp_db:
    image: postgres:16
    container_name: mdp_db_dev
    ports: ["5443:5432"]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - mdp_db_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 40

  mdp_backend:
    build: ./backend
    container_name: mdp_backend_dev
    depends_on:
      mdp_db:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ACCESS_TOKEN_LIFETIME_MIN: ${ACCESS_TOKEN_LIFETIME_MIN}
      REFRESH_TOKEN_LIFETIME_DAYS: ${REFRESH_TOKEN_LIFETIME_DAYS}
    volumes:
      - ./backend:/app
    ports: ["9004:8000"]
    command: ["bash","-lc","python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]

  # serveur Vite pour le dev (hot-reload)
  mdp_vite:
    image: node:20-alpine
    container_name: mdp_vite_dev
    working_dir: /usr/src/app
    environment:
      VITE_API_BASE: ${API_BASE}
    volumes:
      - ./frontend:/usr/src/app
      - mdp_node_modules:/usr/src/app/node_modules
    ports: ["5274:5173"]
    command: ["sh","-lc","npm install && npm run dev -- --host 0.0.0.0 --port 5173"]

  # build Vite + Nginx (parit√© prod)
  mdp_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: ${API_BASE}
    image: mdp-frontend:dev
    container_name: mdp_frontend_dev
    ports: ["127.0.0.1:5275:80"]
    restart: unless-stopped

volumes:
  mdp_db_data_dev:
  mdp_node_modules:
