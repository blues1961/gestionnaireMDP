
services:
  db:
    image: postgres:16-alpine
    container_name: ${APP_SLUG}_db_${APP_ENV}
    restart: unless-stopped
    env_file:
      - .env.dev
      - .env.dev.local
    # Les POSTGRES_* viennent des env_file; pas besoin de les répéter ici
    ports:
      - "${DEV_DB_PORT:-5433}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks:
      - appnet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    image: ${APP_SLUG}-backend:dev
    container_name: ${APP_SLUG}_backend_${APP_ENV}
    restart: unless-stopped
    env_file:
      - .env.dev
      - .env.dev.local
    environment:
      FRONT_ORIGIN: "http://localhost:${DEV_VITE_PORT:-5174}"
      CSRF_TRUSTED_ORIGINS: "http://localhost,http://127.0.0.1,http://localhost:${DEV_VITE_PORT:-5174},http://localhost:${DEV_API_PORT:-8002}"
      API_BASE: "${API_BASE}"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${DEV_API_PORT:-8002}:8000"
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    networks:
      - appnet


  vite:
    image: node:20-alpine
    container_name: ${APP_SLUG}_vite_${APP_ENV}
    working_dir: /app
    restart: unless-stopped
    env_file:
      - .env.dev
      - .env.dev.local
    environment:
      VITE_API_BASE: "/api"
      VITE_APP_SLUG: "${APP_SLUG}"
      VITE_APP_NAME: "${APP_NAME}"

    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    depends_on:
      - backend
    ports:
      - "${DEV_VITE_PORT:-5174}:5173"
    networks:
      - appnet

  frontend:
    # Optionnel en dev : build statique (Caddy/Nginx). Non exposé (on utilise Vite).
    image: caddy:2
    container_name: ${APP_SLUG}_frontend_${APP_ENV}
    restart: unless-stopped
    volumes:
      - ./frontend/dist:/usr/share/caddy:ro
    depends_on:
      - vite
    networks:
      - appnet
    # Pas de ports en dev (on passe par Vite:5174)

volumes:
  pgdata:
    name: ${APP_SLUG}_${APP_ENV}_pgdata
  node_modules:
    name: ${APP_SLUG}_${APP_ENV}_node_modules

networks:
  appnet:
    name: ${APP_SLUG}_appnet
