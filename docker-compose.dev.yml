services:
  mdp_db:
    image: postgres:16-alpine
    container_name: mdp_db_dev
    restart: unless-stopped
    env_file:
      - .env.dev
      - .env.dev.local            # ← contient POSTGRES_PASSWORD
    ports:
      - "${DB_PORT_HOST:-5443}:5432"   # expose si tu veux DBeaver: localhost:5443
    volumes:
      - mdp_db_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 40


  mdp_backend:
    build: ./backend
    container_name: mdp_backend_dev
    restart: unless-stopped
    env_file:
      - .env.dev
      - .env.dev.local            # ← indispensable pour que POSTGRES_PASSWORD entre
    mdp_backend:
      depends_on:
        mdp_db:
          condition: service_healthy

    environment:
      # On ne définit PLUS DB_NAME/DB_USER/DB_PASSWORD ici.
      # On ne garde que l’accessibilité réseau interne :
        DB_HOST: mdp_db
        DB_PORT: "5432"
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT_HOST:-9004}:8000"
    command: ["bash","-lc","python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]

  mdp_vite:
    image: node:20-alpine
    container_name: mdp_vite_dev
    working_dir: /usr/src/app
    restart: unless-stopped
    environment:
      VITE_API_BASE: ${API_BASE:-http://localhost:9004/api/}
    volumes:
      - ./frontend:/usr/src/app
      - mdp_node_modules:/usr/src/app/node_modules
    ports:
      - "${VITE_PORT_HOST:-5274}:5173"
    command: ["sh","-lc","npm install && npm run dev -- --host 0.0.0.0 --port 5173"]

  mdp_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: ${API_BASE:-http://localhost:9004/api/}
    image: mdp-frontend:dev
    container_name: mdp_frontend_dev
    restart: unless-stopped
    env_file:
      - .env.dev
      - .env.dev.local
    ports:
      - "127.0.0.1:${FRONTEND_PORT_HOST:-5275}:80"

volumes:
  mdp_db_data_dev:
  mdp_node_modules:
