version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: mdp_db_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - mdp_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"']
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mdp_backend_prod
    restart: unless-stopped
    # En prod on ne monte PAS le code hôte (image immuable)
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
    # Commande: migrations + collectstatic + gunicorn
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn gestionnaire_mdp.wsgi:application
        --bind 0.0.0.0:8000
        --workers 3
        --timeout 60
      "
    # Expose uniquement en loopback du serveur (Apache reverse-proxy /api → 127.0.0.1:8000)
    ports:
      - "127.0.0.1:8000:8000"

volumes:
  mdp_db_data:
