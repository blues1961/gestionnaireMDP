services:
  db:
    image: postgres:16-alpine
    container_name: mdp_db_prod
    restart: unless-stopped
    env_file: .env.prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - mdp_db_data:/var/lib/postgresql/data
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  mdp_frontend_prod:
    image: ghcr.io/${REPO_OWNER:-blues1961}/mdp-frontend:${IMAGE_TAG:-latest}
    container_name: mdp_frontend_prod
    ports:
      - "127.0.0.1:${MDP_FRONT_PORT:-9082}:80"
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    restart: unless-stopped

  backend:
    image: ghcr.io/${REPO_OWNER:-blues1961}/mdp-backend:${IMAGE_TAG:-latest}
    container_name: mdp_backend_prod
    restart: unless-stopped
    env_file: .env.prod
    depends_on:
      db:
        condition: service_healthy
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS -H 'X-Forwarded-Proto: https' http://127.0.0.1:8000/admin/login/ >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    ports:
      - "127.0.0.1:${MDP_API_PORT:-9004}:8000"

volumes:
  mdp_db_data:

networks:
  internal:
    driver: bridge
