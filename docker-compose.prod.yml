# Utilise APP_SLUG pour le nom de projet → ressources nommées "mdp_prod_*"
name: ${APP_SLUG}_prod

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${APP_SLUG}_backend_prod
    env_file:
      - .env.prod
      - .env.prod.local
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on: [db]
    labels:
      - traefik.enable=true
      - traefik.docker.network=edge  
      - traefik.http.routers.mdp_api.rule=Host(`mdp-api.mon-site.ca`)
      - traefik.http.routers.mdp_api.entrypoints=web
      - traefik.http.services.mdp_api.loadbalancer.server.port=8000
    command: >
      bash -lc "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn gestionnaire_mdp.wsgi:application -b 0.0.0.0:8000 --workers 3
      "
    expose: ["8000"]

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: ${APP_SLUG}_frontend_prod
    depends_on: [backend]
    labels:
      - traefik.enable=true
      - traefik.docker.network=edge  
      - traefik.http.routers.mdp_front.rule=Host(`mdp.mon-site.ca`)
      - traefik.http.routers.mdp_front.entrypoints=web
      - traefik.http.services.mdp_front.loadbalancer.server.port=80
    expose: ["80"]

  db:
    image: postgres:16
    container_name: ${APP_SLUG}_db_prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [appnet]

networks:
  appnet: {}
  edge:
    external: true

volumes:
  pgdata: {}
