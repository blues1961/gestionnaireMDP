version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: mdp_db_prod
    restart: unless-stopped
    env_file:
      - .env.prod
      - .env.prod.local
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - mdp_prod_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: mdp_backend_prod
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env.prod
      - .env.prod.local
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_DEBUG=0
      - ALLOWED_HOSTS=mdp-api.mon-site.ca
      - CSRF_TRUSTED_ORIGINS=http://mdp-api.mon-site.ca,http://mdp.mon-site.ca,https://mdp-api.mon-site.ca,https://mdp.mon-site.ca
    expose:
      - "8000"
    labels:
      traefik.enable: "true"
      traefik.docker.network: "edge"
      traefik.http.routers.mdp_api.rule: "Host(`mdp-api.mon-site.ca`)"
      traefik.http.routers.mdp_api.entrypoints: "web"
      traefik.http.services.mdp_api.loadbalancer.server.port: "8000"
    networks:
      - appnet
      - edge

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: mdp_frontend_prod
    depends_on:
      - backend
    restart: unless-stopped
    expose:
      - "80"
    labels:
      traefik.enable: "true"
      traefik.docker.network: "edge"
      traefik.http.routers.mdp_front.rule: "Host(`mdp.mon-site.ca`)"
      traefik.http.routers.mdp_front.entrypoints: "web"
      traefik.http.services.mdp_front.loadbalancer.server.port: "80"
    networks:
      - edge

volumes:
  mdp_prod_pgdata:
    external: true

networks:
  appnet:
    driver: bridge
  edge:
    external: true
